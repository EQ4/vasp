# xsample - extended sample objects for Max/MSP and pd (pure data)
# Copyright (c) 2001,2002 Thomas Grill (xovo@gmx.net)
#
# Makefile for gcc @ linux
#
# usage:
# to build run "make -f makefile.pd-linux"
# to install (as root), do "make -f makefile.pd-linux install"
#

## EDIT ZONE ##################################

# flext path 
FLEXTPATH=/usr/local/lib/pd/flext

# pd path 
#PDPATH=/usr/local/lib/pd/include

# where to install  
INSTDIR=/usr/local/lib/pd/extra

###############################################

FLEXTLIB=$(FLEXTPATH)/flext_t.a

# where to build (temporary)
TARGDIR=../pd-linux

# compiler stuff
CXX=gcc-3.2
INCLUDES=$(PDPATH)
FLAGS=-DPD -DFLEXT_THREADS
CFLAGS=-O6 -mcpu=pentiumpro -fmove-all-movables -frerun-loop-opt -finline-functions # -funroll-loops 
LIBS=m

# ----------------------------------------------
# the rest can stay untouched
# ----------------------------------------------

NAME=vasp

# all the source files from the package
SRCS= \
arg.cpp      mixfft.cpp      obj_peaks.cpp  obj_sync.cpp  ops_arith.cpp   ops_dft.cpp      ops_qminmax.cpp  ops_wnd.cpp  vasp.cpp \
buflib.cpp   obj_frames.cpp  obj_q.cpp      obj_vasp.cpp  ops_assign.cpp  ops_feature.cpp  ops_rearr.cpp    opvecs.cpp   vbuffer.cpp \
classes.cpp  obj_imm.cpp     obj_radio.cpp  obj_vecs.cpp  ops_carith.cpp  ops_flt.cpp      ops_resmp.cpp    rdx2fft.cpp  vecblk.cpp \
env.cpp      obj_offs.cpp    obj_size.cpp   opbase.cpp    ops_cmp.cpp     ops_gate.cpp     ops_search.cpp   rvfft.cpp \
main.cpp     obj_part.cpp    obj_split.cpp  opparam.cpp   ops_cplx.cpp    ops_gen.cpp      ops_trnsc.cpp    util.cpp
              
HDRS= \
arg.h      env.h     opdefs.h     ops.h         ops_carith.h  ops_dft.h      ops_gen.h    ops_search.h  util.h     vecblk.h \
buflib.h   main.h    opparam.h    ops_arith.h   ops_cmp.h     ops_feature.h  ops_rearr.h  ops_trnsc.h   vasp.h \
classes.h  opbase.h  oppermute.h  ops_assign.h  ops_cplx.h    ops_flt.h      ops_resmp.h  ops_wnd.h     vbuffer.h


MAKEFILE=makefile.pd-linux
TARGET=$(TARGDIR)/$(NAME).pd_linux

# default target
all: $(TARGDIR) $(TARGET) 

$(SRCS): $(HDRS) $(MAKEFILE)
	touch $@

$(TARGDIR):
	mkdir $(TARGDIR)

$(TARGDIR)/%.o : %.cpp 
	$(CXX) -c $(CFLAGS) $(FLAGS) $(patsubst %,-I%,$(INCLUDES) $(FLEXTPATH)) $< -o $@

$(TARGET) : $(patsubst %.cpp,$(TARGDIR)/%.o,$(SRCS)) $(FLEXTLIB) 
	$(CXX) $(LDFLAGS) -shared $^ $(patsubst %,-l%,$(LIBS)) -o $@ 
	strip --strip-unneeded $@
	chmod 755 $@

$(INSTDIR):
	mkdir $(INSTDIR)

install:: $(INSTDIR)

install:: $(TARGET) 
	cp $^ $(INSTDIR)
	chown root.root $(patsubst %,$(INSTDIR)/%,$(notdir $^))

.PHONY: clean
clean:
	rm -f $(TARGDIR)/*.o $(TARGET)
	











