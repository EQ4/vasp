#N canvas 108 98 754 512 10;
#X msg 208 220 vasp buffer1;
#N canvas 40 55 255 173 clear_buffer 0;
#X obj 59 79 vasp.update;
#X obj 59 56 vasp.= 0;
#X obj 59 26 inlet;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X restore 530 459 pd clear_buffer;
#N canvas 0 0 450 300 graph167 0;
#X array buffer1 44100 float 0;
#X coords 0 1 44099 -1 300 120 1;
#X restore 286 43 graph;
#N canvas 0 0 400 276 init 0;
#X obj 36 19 loadbang;
#X msg 36 45 symbol buffer1;
#X msg 37 73 \; \$1 xticks 0 4410 10 \; \$1 xlabel 1.1 0 22050 44100
\; \$1 yticks 0 0.25 2 \; \$1 ylabel 47000 -1 -0.5 0 0.5 1;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 654 459 pd init;
#X msg 530 438 vasp buffer1;
#X obj 208 282 vasp.noise;
#X obj 208 351 vasp.u;
#X text 36 185 generate noise with vasp:;
#X text 73 349 update the display;
#X text 82 218 appoint a buffer;
#X text 66 284 specify the process;
#X text 291 350 4) the data is displayed in the array;
#X text 290 250 1) the "vasp buffer1" message (reference) is sent to
the vasp.noise-object.;
#X text 289 285 2) noise is calculated into the array.;
#X text 292 320 3) a vasp message (reference) is passed to the next
object;
#X text 306 221 <-- to generate CLICK HERE;
#X connect 0 0 5 0;
#X connect 4 0 1 0;
#X connect 5 0 6 0;
